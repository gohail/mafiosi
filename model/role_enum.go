// Code generated by go-enum
// DO NOT EDIT!

package model

import (
	"fmt"
	"strings"
)

const (
	// RoleMafia is a Role of type Mafia
	RoleMafia Role = iota
	// RoleCitizen is a Role of type Citizen
	RoleCitizen
	// RoleCop is a Role of type Cop
	RoleCop
)

const _RoleName = "MafiaCitizenCop"

var _RoleMap = map[Role]string{
	0: _RoleName[0:5],
	1: _RoleName[5:12],
	2: _RoleName[12:15],
}

// String implements the Stringer interface.
func (x Role) String() string {
	if str, ok := _RoleMap[x]; ok {
		return str
	}
	return fmt.Sprintf("Role(%d)", x)
}

var _RoleValue = map[string]Role{
	_RoleName[0:5]:                    0,
	strings.ToLower(_RoleName[0:5]):   0,
	_RoleName[5:12]:                   1,
	strings.ToLower(_RoleName[5:12]):  1,
	_RoleName[12:15]:                  2,
	strings.ToLower(_RoleName[12:15]): 2,
}

// ParseRole attempts to convert a string to a Role
func ParseRole(name string) (Role, error) {
	if x, ok := _RoleValue[name]; ok {
		return x, nil
	}
	return Role(0), fmt.Errorf("%s is not a valid Role", name)
}
